
git add <文件名>            将文件加入到版本库
git commit -m "<修改说明>"  提交本次修改（形成快照）
git status                  查看工作区状态
git diff                    查看修改内容(是工作区和暂存区的对比)
git diff -- cached          查看修改内容(是暂存区和分支的对比)
git diff HEAD -- <文件名>   查看修改内容(工作区和分支的对比)
git log                     查看历史记录
git log --pretty=oneline    精简上一条的记录
git reflog                  可以查看每次修改的commit的id和修改说明
git checkout -- file        丢弃工作区的修改（未add）
git reset HEAD file         将添加到暂存区的修改丢弃（未commit）
git reset --hard <commit号> 跳转到某次修改
git reset --hard HEDA~x     跳转到上x次修改
git push origin master      将分支内容推送到github
git clone git@github.com:<gihub目录>          将github上的指定内容克隆到本地
git checkout -b '<名称>'    新建并切换到新分支
git branch                  查看当前分支
git branch <名称>           新建分支
git merge <分支名称>        将指定分支合并到当前分支
git branch -b <分支名称>    删除指定分支
git log --graph             查看分之合并图
git stash                   储存当前工作区
git stash list              查看储存的工作区
git stash pop               恢复并删除储存的工作区
git branch -D <分支名>      删除未合并分支
git remote -v               显示可抓取和推送的github端地址
git push origin <分支名>    将本地分支推送到github端
git pull                    从远程抓取分支
git branch --set-upstream branch-name origin/branch-name         建立本地分支和远程分支的关联
git checkout -b branch-name origin/branch-name                   在本地创建和远程分支对应的分支
git tag <标签>              注明版本号
git tag <标签> <commit号>   为特定快照注明版本号
git show <标签>             查看标签信息
git tag -a <标签> -m "<说明>" <commit号>                         添加说明
git tag -d <标签>           删除标签
git push origin <标签>      向远程推送某一个标签
git push origin --tags      向远程推送所有未推送的标签
git push origin :refs/tags/<标签>                                删除远程标签


