Thanks you!

$git init  
     在指定目录下创建git仓库 repository
$git add readme.txt
     添加文件或者是提交修改到 stage（暂存区）
$git commit -m  “commit changes"
     提交stage中的内容到本地版本库
$git status
     查看rep的当前状态，包括工作区与暂存区
$git diff
     查看工作区与仓库间的区别，如果工作区文件已添加到暂存区stage中，则忽略diff
$git log
     查看版本控制历史记录
$git log —pretty=oneline
     单行显示历史记录
$git reflog 
     查看所有操作历史记录，包括回退记录
$git reset —hard HEAD^
     回退工作区上个版本
$git reset —hard defiaw3io(版本 id)
     回退到指定版本id对应版本
$git checkout — readme.txt
     丢弃工作区的修改（未提交到暂存区stage的修改）
$git reset HEAD readme.txt
     丢弃暂存区的修改unstage,重新放回工作区
     区别与版本回退 git reset —hard HEAD^
$git rm readme.txt
     删除文件，commit后生效
$git checkout — readme.txt
     还未提交rm的情况下，可以撤销删除，恢复工作区文件

$git remote add origin “git site"
     把本地仓库与远程库相关联，origin就是远程库的名字，git默认，可修改。
$git push -u origin master
     把本地库的内容推送到远程，由于是第一次推送master分支，所以加上了-u参数。
     git不但把本地master分支内容推送到远程新master分支，还会把本地的master
     分支和远程master分支关联起来。
     之后push就不需要-u参数了。
$git clone “remote rep site"
     克隆远程库到本地

分支部分：
   
$git checkout -b dev
     创建分支(名称为dev)，然后切换到dev分支
     -b表示创建并切换，相当于一下：
     $git branch dev 创建dev分支
     $git checkout dev 切换到dev分支
$git branch
     查看当前分支
$git merge dev 
     合并分支dev
$git branch -d dev
     删除分支
$git branch -D dev
     强行删除分支
$git log —graph 
     查看分支合并图
$git merge —no-ff -m “msg” dev
     禁用fast forward合并，保留分支合并信息

$git stash
     保存现场，转到其他分支
$git stash list 
     查看保存的现场list
$git stash apply
     恢复某现场
$git stash pop
     恢复并删除某现场
$git stash drop 
     删除某现场

$git remote 
     查看远程库信息
$git remote -v
     远程库详细信息
$git checkout -b dev origin/dev
     创建本地dev分支，对应远程dev分支

$git branch —set-upstream dev origin/dev
     创建本地与远程dev分支的链接

$git tag ’tagname'
     打标签
$git tag
     查看标签
$git tag ’tagname’ ‘commit id'
     对指定commit id对应提交打标签
$git show 'tagname'


