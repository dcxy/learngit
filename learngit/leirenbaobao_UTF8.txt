顶一下廖前辈

git init
git add xxx.txt
git commit xxx.txt

git status
git diff

git log
git log --pretty=oneline
HEAD表示当前版本， HEAD^上一个版本， HEAD^^ 上上版本  HEAD~100
git reset
git reset --hard HEAD^
git reset --hard 3628164(版本号)
git reflog

工作区--add-》暂存区--commit-》master

git记录的是对文件的修改

git checkout -- xxx.txt
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
git reset HEAD file

git rm xxx.txt

==================

SSH加密
ssh-keygen -t rsa -C "youremail@example.com"

git remote add origin git@github.com:leirenbaobao/learngit.git
git push -u origin master
git push origin master

git clone git@github.com:leirenbaobao/gitskills.git

查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

冲突修改

git merge --no-ff -m "merge with no-ff" ctrlz
合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。

git stash
git stash list
一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；另一种方式是用git stash pop，恢复的同时把stash内容也删了
git stash apply stash@{0}


git branch -D ctrlz在未完成合并的情况下

git remote/git remote -v

git push origin master/git push origin ctrlz

git tag <name>/git tag v1.0 6224937/git tag

命令git push origin <tagname>可以推送一个本地标签；
命令git push origin --tags可以推送全部未推送过的本地标签；
命令git tag -d <tagname>可以删除一个本地标签；
命令git push origin :refs/tags/<tagname>可以删除一个远程标签。


