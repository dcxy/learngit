git config --global user.name "Your Name"
git config --global user.email "email@example.com"
git add .
git diff readme.txt				//工作区和暂存区里的版本比较
git diff HEAD -- readme.txt		//工作区和版本库里的最新版本比较
git checkout -- readme.txt		//暂存区有则恢复为暂存区中的内容，否则恢复为版本库中的最新版本
git reset HEAD readme.txt		//将暂存区的修改撤销掉
git log
git reflog
git reset --hard HEAD^
git reset --hard ea34578d5496d7dd233c827ed32a8cd57
git rm test.txt
git commit -m "remove test.txt"
ssh-keygen -t rsa -C "youremail@example.com"
git remote add origin git@github.com:maitiantian/learngit.git 	//把当前本地仓库与远成仓库关联
git push -u origin master		//关联后，使用命令git push -u origin master第一次推送master分支的所有内容
git push origin master			//git push <远程主机名> <本地分支名>  <远程分支名>
								//不带任何参数的git push，默认只推送当前分支
git clone git@github:maitiantian/gitskills.git
git checkout -b dev				//创建并切换到dev分支
git branch
git checkout master
git merge dev
git branch -d dev
git log --graph --pretty=oneline --abbrev-commit
git merge --no-ff -m "merge with no-ff" dev	//因为本次合并要创建一个新的commit，所以加上-m参数，把commit描述写进去
											//合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并
git merge --squash dev
git rm test.txt
git stash						//隐藏工作区、暂存区的未提交的工作
git stash list					//
git branch -d feature-vulcan	//删除一个分支
git branch -D feature-vulcan	//用于强行删除一个没有被合并过的分支
git remote
git remote -v
git push origin master 			//把master分支推送到远程库对应的远程分支上
git checkout -b dev origin/dev	//创建远程origin的dev分支到本地
git pull <remote> <branch>		//从远程拉取对应的分支
git branch --set-upstream dev origin/dev	//如果git pull失败，则是因为没有指定本地dev分支与远程origin/dev分支的链接，设置dev和origin/dev的链接
git tag v1.0					//在最新的提交上打一个标签
git tag 						//显示所有标签
git tag v0.9 574893y			//在commit id为574893y的提交上打一个标签
git show <tagname>				//查看标签信息
git tag -a v0.1 -m "version 0.1 released" 3628164				//创建带说明的标签，用-a指定标签名，-m指定说明文字
git tag -s v0.2 -m "signed version 0.2 released" fec145a		//通过-s用私钥签名一个标签
git tag -d v0.1					//删除一个标签
git push origin <tagname>		//推送某个标签到远程(创建的标签都只存储在本地，不会自动推送到远程)
git push origin --tags			//一次性推送全部尚未推送到远程的本地标签
git tag -d v0.9
git push origin :refs/tags/v0.9	//如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除,然后，从远程删除
git clone git@github.com:maitiantian/bootstrap.git 				//一定要从自己的账号下clone仓库，这样你才能推送修改